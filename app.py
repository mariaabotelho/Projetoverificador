import streamlit as st
from dataclasses import dataclass
from typing import List, Dict, Optional, Tuple
import os
import requests
from bs4 import BeautifulSoup
from langchain_groq import ChatGroq
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain
from langchain_community.document_loaders import WebBaseLoader
import trafilatura

# [Classes SearchResult e FakeNewsChecker permanecem as mesmas]

def create_sidebar():
    with st.sidebar:
        st.image("logo verifik.png", width=100)
        st.title("Sobre o Verifik")
        
        st.write("""
        O Verifik √© uma ferramenta de verifica√ß√£o de not√≠cias que surge da 
        necessidade de combater a desinforma√ß√£o em uma era de sobrecarga 
        informacional nas redes sociais.
        """)
        
        st.subheader("Objetivo")
        st.write("""
        Oferecer uma ferramenta que automatiza o processo de verifica√ß√£o,
        consultando m√∫ltiplas fontes e analisando a credibilidade das 
        informa√ß√µes de forma r√°pida e acess√≠vel.
        """)
        
        st.subheader("Criadoras")
        col1, col2, col3 = st.columns(3)
        with col1:
            st.caption("Maria Botelho")
        with col2:
            st.caption("Clarissa Treptow")
        with col3:
            st.caption("Catarina Moll")

def show_usage_tips():
    with st.expander("üìù Dicas para obter melhores resultados"):
        st.info("""
        **Para uma verifica√ß√£o mais precisa:**
        
        1. **Ortografia correta**: Verifique a grafia dos nomes e palavras
        2. **Seja espec√≠fico**: Quanto mais detalhes, melhor ser√° a an√°lise
        3. **Inclua datas**: Quando poss√≠vel, especifique o per√≠odo do evento
        
        **Exemplo de uma boa consulta:**
        "Minist√©rio da Sa√∫de confirmou 5 casos de dengue tipo 3 em S√£o Paulo em janeiro de 2024"
        """)
        
        st.warning("""
        **Limita√ß√µes importantes:**
        - Base de dados limitada at√© 2022
        - Resultados podem variar dependendo das fontes dispon√≠veis
        """)
        
        st.error("""
        **Disclaimer**: O Verifik utiliza intelig√™ncia artificial para an√°lise.
        Embora busquemos a m√°xima precis√£o, recomendamos sempre verificar as
        fontes originais para informa√ß√µes cr√≠ticas.
        """)

def main():
    st.set_page_config(
        page_title="Verifik",
        page_icon="üîç",
        layout="wide"
    )

    create_sidebar()

    # Cabe√ßalho principal
    col_logo, col_title = st.columns([1, 4])
    with col_logo:
        st.image("logo verifik.png", width=200)
    with col_title:
        st.title("Verifik")
        st.subheader("Verifica√ß√£o inteligente de not√≠cias")

    # Dicas de uso
    show_usage_tips()

    # Container principal
    with st.container():
        st.write("---")
        query = st.text_area(
            "Digite a afirma√ß√£o que deseja verificar:",
            height=100,
            placeholder="Ex: Minist√©rio da Sa√∫de confirmou 5 casos de dengue tipo 3 em S√£o Paulo em janeiro de 2024"
        )
        
        col1, col2, col3 = st.columns([1, 1, 1])
        with col2:
            verify_button = st.button("Verificar", type="primary", use_container_width=True)

    if verify_button and query:
        checker = FakeNewsChecker()
        
        try:
            with st.spinner("Analisando..."):
                analysis, results = checker.verify_claim(query)
            
            # Resultados em tabs
            tab1, tab2 = st.tabs(["üìä An√°lise", "üîé Fontes"])
            
            with tab1:
                st.markdown(analysis)
            
            with tab2:
                for idx, result in enumerate(results, 1):
                    with st.expander(f"Fonte {idx}: {result.title}"):
                        cols = st.columns([2, 1])
                        with cols[0]:
                            st.write(f"**Fonte:** {result.source}")
                            st.write(f"**Data:** {result.date}")
                        with cols[1]:
                            st.write(f"**URL:** {result.url}")
                        if result.excerpt:
                            st.info(f"**Trecho relevante:** {result.excerpt}")

        except Exception as e:
            st.error(f"Ocorreu um erro durante a an√°lise: {str(e)}")
            
    elif verify_button:
        st.warning("Por favor, digite uma afirma√ß√£o para verificar.")

if __name__ == "__main__":
    main()
